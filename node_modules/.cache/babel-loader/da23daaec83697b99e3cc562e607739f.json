{"ast":null,"code":"var _jsxFileName = \"/Users/misraturp/Desktop/web development course work/robofriends_app/src/containers/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\nimport { setSearchField } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value))\n  };\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [] // searchfield: ''\n\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      robots: users\n    }));\n  } // onSearchChange = (event) => {\n  // \tthis.setState({ searchfield: event.target.value});\n  // }\n\n\n  render() {\n    const _this$state = this.state,\n          robots = _this$state.robots,\n          searchfield = _this$state.searchfield;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n    return React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"f1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \" RoboFriends \"), React.createElement(SearchBox, {\n      searchChange: this.onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Scroll, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(ErrorBoundry, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(CardList, {\n      robots: filteredRobots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/misraturp/Desktop/web development course work/robofriends_app/src/containers/App.js"],"names":["React","connect","CardList","SearchBox","Scroll","ErrorBoundry","setSearchField","mapStateToProps","state","searchField","searchRobots","mapDispatchToProps","dispatch","onSearchChange","event","target","value","App","Component","constructor","robots","componentDidMount","fetch","then","response","json","users","setState","render","searchfield","filteredRobots","filter","robot","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAO,WAAP;AAEA,SAASC,cAAT,QAA+B,YAA/B;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAChC,SAAO;AACNC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD;AAD1B,GAAP;AAGA,CAJD;;AAMA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAO;AACNC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACN,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AAD7B,GAAP;AAGA,CAJD;;AAOA,MAAMC,GAAN,SAAkBjB,KAAK,CAACkB,SAAxB,CAAkC;AACjCC,EAAAA,WAAW,GAAE;AACZ;AACA,SAAKX,KAAL,GAAa;AACZY,MAAAA,MAAM,EAAE,EADI,CAEZ;;AAFY,KAAb;AAKA;;AAEDC,EAAAA,iBAAiB,GAAE;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADjB,EAECF,IAFD,CAEMG,KAAK,IAAE,KAAKC,QAAL,CAAc;AAACP,MAAAA,MAAM,EAACM;AAAR,KAAd,CAFb;AAGA,GAdgC,CAgBjC;AACA;AACA;;;AAGAE,EAAAA,MAAM,GAAE;AAAA,wBACuB,KAAKpB,KAD5B;AAAA,UACAY,MADA,eACAA,MADA;AAAA,UACQS,WADR,eACQA,WADR;AAEP,UAAMC,cAAc,GAAGV,MAAM,CAACW,MAAP,CAAcC,KAAK,IAAI;AAC7C,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCN,WAAW,CAACK,WAAZ,EAAlC,CAAP;AACA,KAFsB,CAAvB;AAGA,WACC;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,EAEC,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,KAAKrB,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEiB,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,CAHD,CADD;AAWC;;AArC+B;;AAwClC,eAAe7B,OAAO,CAACM,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CM,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\nimport { setSearchField } from '../actions'\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tsearchField: state.searchRobots.searchField\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonSearchChange: (event) => dispatch(setSearchField(event.target.value))\n\t}\n}\n\n\nclass App extends React.Component {\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\t// searchfield: ''\n\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response=> response.json())\n\t\t.then(users=>this.setState({robots:users}));\n\t}\n\n\t// onSearchChange = (event) => {\n\t// \tthis.setState({ searchfield: event.target.value});\n\t// }\n\n\n\trender(){\n\t\tconst {robots, searchfield} = this.state;\n\t\tconst filteredRobots = robots.filter(robot => {\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\n\t\t})\n\t\treturn (\n\t\t\t<div className='tc'>\n\t\t\t\t<h1 className='f1'> RoboFriends </h1>\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t\t\t<Scroll>\n\t\t\t\t\t<ErrorBoundry>\n\t\t\t\t\t\t<CardList robots={filteredRobots}/>\n\t\t\t\t\t</ErrorBoundry>\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t\t)\n\t\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}