{"ast":null,"code":"var _jsxFileName = \"/Users/misraturp/Desktop/web development course work/robofriends_app/src/containers/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\nimport { setSearchField, requestRobots } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestrobots: () => dispatch(requestRobots()) // same as this: requestRobots(dispatch)\n\n  };\n};\n\nclass App extends React.Component {\n  // change after thunk\n  // constructor(){\n  // \tsuper()\n  // \tthis.state = {\n  // \t\trobots: [],\n  // \t\t// searchfield: ''\n  // }\n  // }\n  componentDidMount() {\n    this.props.onRequestrobots(); // change after thunk\n    // \tfetch('https://jsonplaceholder.typicode.com/users')\n    // \t.then(response=> response.json())\n    // \t.then(users=>this.setState({robots:users}));\n  } // onSearchChange = (event) => {\n  // \tthis.setState({ searchfield: event.target.value});\n  // }\n\n\n  render() {\n    // const {robots, searchfield} = this.state;\n    // const {robots} = this.state;\n    const _this$props = this.props,\n          searchField = _this$props.searchField,\n          onSearchChange = _this$props.onSearchChange,\n          robots = _this$props.robots,\n          isPending = _this$props.isPending;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return isPending ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \" Loading \") : React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"f1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" RoboFriends \"), React.createElement(SearchBox, {\n      searchChange: onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Scroll, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(ErrorBoundry, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(CardList, {\n      robots: filteredRobots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/misraturp/Desktop/web development course work/robofriends_app/src/containers/App.js"],"names":["React","connect","CardList","SearchBox","Scroll","ErrorBoundry","setSearchField","requestRobots","mapStateToProps","state","searchField","searchRobots","robots","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestrobots","App","Component","componentDidMount","props","render","filteredRobots","filter","robot","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAO,WAAP;AAEA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,YAA9C;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAChC,SAAO;AACNC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WAD1B;AAENE,IAAAA,MAAM,EAAEH,KAAK,CAACF,aAAN,CAAoBK,MAFtB;AAGNC,IAAAA,SAAS,EAAEJ,KAAK,CAACF,aAAN,CAAoBM,SAHzB;AAINC,IAAAA,KAAK,EAAEL,KAAK,CAACF,aAAN,CAAoBO;AAJrB,GAAP;AAMA,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAO;AACNC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACV,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAD7B;AAENC,IAAAA,eAAe,EAAE,MAAML,QAAQ,CAACT,aAAa,EAAd,CAFzB,CAE2C;;AAF3C,GAAP;AAKA,CAND;;AASA,MAAMe,GAAN,SAAkBtB,KAAK,CAACuB,SAAxB,CAAkC;AAEjC;AACA;AACA;AACA;AACA;AACA;AAEC;AACD;AAEAC,EAAAA,iBAAiB,GAAE;AAClB,SAAKC,KAAL,CAAWJ,eAAX,GADkB,CAGnB;AACA;AACA;AACA;AACC,GAnBgC,CAqBjC;AACA;AACA;;;AAGAK,EAAAA,MAAM,GAAE;AACP;AACA;AAFO,wBAGoD,KAAKD,KAHzD;AAAA,UAGCf,WAHD,eAGCA,WAHD;AAAA,UAGcO,cAHd,eAGcA,cAHd;AAAA,UAG8BL,MAH9B,eAG8BA,MAH9B;AAAA,UAGsCC,SAHtC,eAGsCA,SAHtC;AAIP,UAAMc,cAAc,GAAGf,MAAM,CAACgB,MAAP,CAAcC,KAAK,IAAI;AAC7C,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCtB,WAAW,CAACqB,WAAZ,EAAlC,CAAP;AACA,KAFsB,CAAvB;AAGA,WAAOlB,SAAS,GACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADe,GAGf;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,EAEC,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAEI,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEU,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,CAHD,CAHD;AAaC;;AA9C+B;;AAiDlC,eAAe1B,OAAO,CAACO,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\nimport { setSearchField, requestRobots } from '../actions'\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tsearchField: state.searchRobots.searchField,\n\t\trobots: state.requestRobots.robots,\n\t\tisPending: state.requestRobots.isPending,\n\t\terror: state.requestRobots.error\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n\t\tonRequestrobots: () => dispatch(requestRobots()) // same as this: requestRobots(dispatch)\n\t\t\n\t}\n}\n\n\nclass App extends React.Component {\n\n\t// change after thunk\n\t// constructor(){\n\t// \tsuper()\n\t// \tthis.state = {\n\t// \t\trobots: [],\n\t// \t\t// searchfield: ''\n\n\t\t// }\n\t// }\n\n\tcomponentDidMount(){\n\t\tthis.props.onRequestrobots();\n\n\t// change after thunk\n\t// \tfetch('https://jsonplaceholder.typicode.com/users')\n\t// \t.then(response=> response.json())\n\t// \t.then(users=>this.setState({robots:users}));\n\t}\n\n\t// onSearchChange = (event) => {\n\t// \tthis.setState({ searchfield: event.target.value});\n\t// }\n\n\n\trender(){\n\t\t// const {robots, searchfield} = this.state;\n\t\t// const {robots} = this.state;\n\t\tconst { searchField, onSearchChange, robots, isPending } = this.props;\n\t\tconst filteredRobots = robots.filter(robot => {\n\t\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\n\t\t})\n\t\treturn isPending ?\n\t\t\t<h1> Loading </h1> :\n\t\t\t(\n\t\t\t<div className='tc'>\n\t\t\t\t<h1 className='f1'> RoboFriends </h1>\n\t\t\t\t<SearchBox searchChange={onSearchChange}/>\n\t\t\t\t<Scroll>\n\t\t\t\t\t<ErrorBoundry>\n\t\t\t\t\t\t<CardList robots={filteredRobots}/>\n\t\t\t\t\t</ErrorBoundry>\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t\t)\n\t\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}