{"ast":null,"code":"var _jsxFileName = \"/Users/misraturp/Desktop/web development course work/robofriends_app/src/containers/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\nimport { setSearchField } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value))\n  };\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [] // searchfield: ''\n\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      robots: users\n    }));\n  } // onSearchChange = (event) => {\n  // \tthis.setState({ searchfield: event.target.value});\n  // }\n\n\n  render() {\n    // const {robots, searchfield} = this.state;\n    const robots = this.state.robots;\n    const _this$props = this.props,\n          searchField = _this$props.searchField,\n          onSearchChange = _this$props.onSearchChange;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"f1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \" RoboFriends \"), React.createElement(SearchBox, {\n      searchChange: onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Scroll, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(ErrorBoundry, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(CardList, {\n      robots: filteredRobots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/misraturp/Desktop/web development course work/robofriends_app/src/containers/App.js"],"names":["React","connect","CardList","SearchBox","Scroll","ErrorBoundry","setSearchField","mapStateToProps","state","searchField","searchRobots","robots","requestRobots","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","App","Component","constructor","componentDidMount","fetch","then","response","json","users","setState","render","props","filteredRobots","filter","robot","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAO,WAAP;AAEA,SAASC,cAAT,QAA+B,YAA/B;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAChC,SAAO;AACNC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WAD1B;AAENE,IAAAA,MAAM,EAAEH,KAAK,CAACI,aAAN,CAAoBD,MAFtB;AAGNE,IAAAA,SAAS,EAAEL,KAAK,CAACI,aAAN,CAAoBC,SAHzB;AAINC,IAAAA,KAAK,EAAEN,KAAK,CAACI,aAAN,CAAoBE;AAJrB,GAAP;AAMA,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAO;AACNC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACV,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AAD7B,GAAP;AAGA,CAJD;;AAOA,MAAMC,GAAN,SAAkBrB,KAAK,CAACsB,SAAxB,CAAkC;AACjCC,EAAAA,WAAW,GAAE;AACZ;AACA,SAAKf,KAAL,GAAa;AACZG,MAAAA,MAAM,EAAE,EADI,CAEZ;;AAFY,KAAb;AAKA;;AAEDa,EAAAA,iBAAiB,GAAE;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADjB,EAECF,IAFD,CAEMG,KAAK,IAAE,KAAKC,QAAL,CAAc;AAACnB,MAAAA,MAAM,EAACkB;AAAR,KAAd,CAFb;AAGA,GAdgC,CAgBjC;AACA;AACA;;;AAGAE,EAAAA,MAAM,GAAE;AACP;AADO,UAEApB,MAFA,GAEU,KAAKH,KAFf,CAEAG,MAFA;AAAA,wBAGiC,KAAKqB,KAHtC;AAAA,UAGCvB,WAHD,eAGCA,WAHD;AAAA,UAGcQ,cAHd,eAGcA,cAHd;AAIP,UAAMgB,cAAc,GAAGtB,MAAM,CAACuB,MAAP,CAAcC,KAAK,IAAI;AAC7C,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC7B,WAAW,CAAC4B,WAAZ,EAAlC,CAAP;AACA,KAFsB,CAAvB;AAGA,WACC;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,EAEC,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAEpB,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEgB,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,CAHD,CADD;AAWC;;AAvC+B;;AA0ClC,eAAehC,OAAO,CAACM,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6CM,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\nimport { setSearchField } from '../actions'\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tsearchField: state.searchRobots.searchField,\n\t\trobots: state.requestRobots.robots,\n\t\tisPending: state.requestRobots.isPending,\n\t\terror: state.requestRobots.error\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonSearchChange: (event) => dispatch(setSearchField(event.target.value))\n\t}\n}\n\n\nclass App extends React.Component {\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\t// searchfield: ''\n\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response=> response.json())\n\t\t.then(users=>this.setState({robots:users}));\n\t}\n\n\t// onSearchChange = (event) => {\n\t// \tthis.setState({ searchfield: event.target.value});\n\t// }\n\n\n\trender(){\n\t\t// const {robots, searchfield} = this.state;\n\t\tconst {robots} = this.state;\n\t\tconst { searchField, onSearchChange } = this.props;\n\t\tconst filteredRobots = robots.filter(robot => {\n\t\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\n\t\t})\n\t\treturn (\n\t\t\t<div className='tc'>\n\t\t\t\t<h1 className='f1'> RoboFriends </h1>\n\t\t\t\t<SearchBox searchChange={onSearchChange}/>\n\t\t\t\t<Scroll>\n\t\t\t\t\t<ErrorBoundry>\n\t\t\t\t\t\t<CardList robots={filteredRobots}/>\n\t\t\t\t\t</ErrorBoundry>\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t\t)\n\t\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}